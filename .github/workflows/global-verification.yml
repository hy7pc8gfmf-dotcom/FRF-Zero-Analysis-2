name: FRF 2.0 形式化验证（权限修复版）

on:
  push:
    branches: [ main, master, dev-frf-2.0 ]
    paths: [ '**.v', 'CoqProject', 'Makefile', 'validate.sh' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      fullVerification:
        type: boolean
        default: false

jobs:
  formal-verification:
    runs-on: ubuntu-latest
    # 关键1：容器配置增加权限与环境变量传递
    container:
      image: coqorg/coq:8.18.0
      options: --user root  # 使用root用户避免容器内权限不足
      env:
        GITHUB_OUTPUT: /__w/_temp/_runner_file_commands/outputs  # 显式传递输出变量路径
        GITHUB_STATE: /__w/_temp/_runner_file_commands/states    # 显式传递状态变量路径

    timeout-minutes: 75
    env:
      MATHLIB_VERSION: "3.74.0"
      COQPATH: "/app/src/SelfContainedLib:/app/src/theories:/app/src/CS_Null:/app/src/Quantum:/app/src/CategoryTheory"
      TEMP_DIR: "/__w/_temp/_runner_file_commands"  # 统一临时目录变量

    steps:
      # 关键2：预处理临时目录权限
      - name: 修复临时目录权限
        run: |
          mkdir -p ${{ env.TEMP_DIR }}
          chmod -R 777 /__w/_temp/  # 赋予临时目录完全读写权限
          chown -R $(id -u):$(id -g) /__w/_temp/  # 对齐用户组权限
          echo "✅ 临时目录权限修复完成"

      # 关键3：使用checkout@v3规避v4的权限兼容问题
      - name: 检出代码仓库
        uses: actions/checkout@v3  # v3在容器环境中更稳定
        with:
          fetch-depth: 2
          submodules: 'recursive'
          path: "/app/src"  # 显式指定工作目录

      - name: 缓存依赖与编译产物
        uses: actions/cache@v3
        with:
          path: |
            ~/.opam
            _build
            **/*.vo
            **/*.glob
          key: v2-opam-${{ env.MATHLIB_VERSION }}-${{ github.sha }}
          restore-keys: v2-opam-${{ env.MATHLIB_VERSION }}-

      - name: 安装依赖
        run: |
          cd /app/src
          opam update -y
          if ! opam list | grep -q "coq-mathlib.*${{ env.MATHLIB_VERSION }}"; then
            opam install -y coq-mathlib=${{ env.MATHLIB_VERSION }}
          fi
          pip3 install pyyaml==6.0.1 markdown==3.5 gitpython==3.1.40

      - name: 生成Makefile
        run: |
          cd /app/src
          [ -f "CoqProject" ] || (echo "❌ 缺失CoqProject" && exit 1)
          coq_makefile -f CoqProject -o Makefile

      # 关键4：正确使用$GITHUB_OUTPUT环境变量（带引号避免路径解析问题）
      - name: 确定编译策略
        id: compile-strategy
        run: |
          cd /app/src
          if [ "${{ github.event.inputs.fullVerification }}" = "true" ] || [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "strategy=full" >> "$GITHUB_OUTPUT"  # 正确引用环境变量
          else
            changed_v_files=$(git diff --name-only HEAD^ HEAD | grep -E '\.v$' || true)
            if [ -z "$changed_v_files" ]; then
              echo "strategy=none" >> "$GITHUB_OUTPUT"
            else
              echo "strategy=incremental" >> "$GITHUB_OUTPUT"
            fi
          fi

      - name: 全量编译
        if: steps.compile-strategy.outputs.strategy == 'full'
        run: |
          cd /app/src
          mkdir -p compile-logs
          make -j$(nproc) 2>&1 | tee compile-logs/compile-full.log

      - name: 增量编译
        if: steps.compile-strategy.outputs.strategy == 'incremental'
        run: |
          cd /app/src
          mkdir -p compile-logs
          changed_v_files=$(git diff --name-only HEAD^ HEAD | grep -E '\.v$')
          targets=$(echo "$changed_v_files" | sed 's/\.v$/.vo/g')
          make -j$(nproc) $targets 2>&1 | tee compile-logs/compile-incremental.log

      - name: 一致性校验
        if: steps.compile-strategy.outputs.strategy != 'none'
        run: |
          cd /app/src
          chmod +x validate.sh
          ./validate.sh 2>&1 | tee compile-logs/validate.log

      - name: 归档产物
        uses: actions/upload-artifact@v4
        with:
          name: verification-artifacts-${{ github.sha }}
          path: |
            /app/src/compile-logs/
            /app/src/**/*.vo
          retention-days: 45